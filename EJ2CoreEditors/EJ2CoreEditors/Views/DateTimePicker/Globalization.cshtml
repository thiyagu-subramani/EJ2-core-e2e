<h3> Globalization: </h3>
<h5>This sample demonstrates how to disable specific dates in the DateTimePicker by using renderDayCell event and how to restrict the date values by using Min and Max property. Also, German culture is set to the DateTimePicker component.</h5>
<br />
    <div class=" col-lg-8 control-section">
        <div id="wrapper" class="datetimepicker-section">
            <div id="datetimepicker-control">
               <ejs-datetimepicker id="datetimepicker"  min="@ViewBag.minDate" max="@ViewBag.maxDate" renderDayCell="disableDate" ></ejs-datetimepicker>
            </div>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <div class="radio-control" id="property" title="Select a Locale">
            <div class="row">
                <ejs-radiobutton id="en" name="locale" label="English" value="en" change="onchange"></ejs-radiobutton>
            </div>
            <div class="row">
                <ejs-radiobutton id="de" name="locale" label="German" value="de" change="onchange" checked="true"></ejs-radiobutton>
            </div>
            <div class="row">
                <ejs-radiobutton id="ar" name="locale" label="Arabic" value="ar" change="onchange"></ejs-radiobutton>
            </div>
        </div>
    </div>
<script>
    function disableDate(args) {
        if (args.date.getDay() === 0 || args.date.getDay() === 6) {
            args.isDisabled = true;
        }
    }
     function onchange(args) {
        /*Apply selected format to the component*/
        var culture = args.value;
        datetimepicker.locale = culture;
        datetimepicker.enableRtl = datetimepicker.locale === 'ar' ? true : false;
        if (culture !== 'en') {
            loadCultureFiles(culture);
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        datetimepicker = document.getElementById('datetimepicker').ej2_instances[0];
        var L10n = ej.base.L10n;
        L10n.load({
            'de': {
                'datetimepicker': {
                    placeholder: 'Wähle eine Datetime',
                    today: 'heute'
                }
            },
            'en': {
                'datetimepicker': {
                    placeholder: 'Choose a datetime',
                    today: 'Today'
                }
            },
            'ar': {
                'datetimepicker': {
                    placeholder: 'تشوس داتيتيم',
                    today: 'اليوم'
                }
            }
        });
        loadCultureFiles('de');
        datetimepicker.locale = 'de';
    });
    function loadCultureFiles(name) {
        var files = ['ca-gregorian.json', 'numbers.json', 'timeZoneNames.json'];
        if (name === 'ar') {
            files.push('numberingSystems.json');
        }
        var loader = ej.base.loadCldr;
        var loadCulture = function (prop) {
            var val, ajax;
            if (name === 'ar' && prop === files.length - 1) {
                ajax = new ej.base.Ajax(location.origin + location.pathname + '/../../scripts/cldr-data/supplemental/' + files[prop], 'GET', false);
            } else {
                ajax = new ej.base.Ajax(location.origin + location.pathname + '/../../scripts/cldr-data/main/' + name + '/' + files[prop], 'GET', false);
            }
            ajax.onSuccess = function (value) {
                val = value;
            };
            ajax.send();
            loader(JSON.parse(val));
        };
        for (var prop = 0; prop < files.length; prop++) {
            loadCulture(prop);
        }
    }
</script>

<style>
    .property-section {
        width: 200px;
    }

    #wrapper {
        max-width: 280px;
        margin: 30px auto;
        padding-top: 50px;
    }

    .e-calendar.e-rtl {
        max-width: 332px;
    }

    .e-bigger .e-calendar.e-rtl {
        max-width: 332px;
    }
</style>
